---
title: "Prosta prognoza ozonu"
author: 
        - Jakub Naporowski 
        - Informatyka Geoprzestrzenna
        - "423583"
date: today 
format: 
  html:
    toc: true
    toc-depth: 3
    toc-location: right
    toc-title: Spis Treści
    number-sections: true
    number-depth: 3
    html-math-method: katex
    code-tools: true
    code-block-bg: true
    code-fold: show
    code-summary: "Show and hide code"
    link-external-icon: true
    link-external-newwindow: true
    smooth-scroll: true
    self-contained: true
    theme: 
        dark: solar
    fontsize: 1.0em
    linestretch: 1.3
    fig-align: center
execute: 
  echo: true
  error: false
  warning: false
  output: true
editor_options: 
  chunk_output_type: console
---

# Biblioteki

```{r}
library(parsnip)
library(tidymodels)
library(tidyverse)
library(yardstick)
library(readr)
library(broom.mixed)
library(dotwhisker)
library(GGally)
```

# Przygotowanie danych
```{r}
colnames(airquality) <- tolower(colnames(airquality))


air <-
  airquality |>
  as_tibble() |>
  na.omit() |> 
  select(-day) |> 
  mutate(month = factor(month)) 

view(air)
```
# Pokazanie korelacji
```{r}
ggpairs(air[, c("ozone", "solar.r", "wind", "temp", "month")])
```

# Tworzenie modelu oraz fit
```{r}
lm_mod <- linear_reg() |> 
  set_engine("lm")

lm_fit <- 
  lm_mod |> 
  fit(ozone ~ solar.r + wind * temp, data=air)

lm_fit$fit |> tidy()
```

# Predykcje
```{r}
air$predict_ozone <- predict(lm_fit, air)

head(air)
```

# Wykres
```{r}
ggplot(air, aes(x = ozone, y = predict_ozone$.pred)) +
  geom_point(color = "blue") +  
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed", lwd = 1) +  
  labs(title = "Rzeczywiste vs Prognozowane wartości stężenia ozonu",
       x = "Rzeczywiste Ozone",
       y = "Prognozowane Ozone") +
  theme_minimal()
```

# Pokazanie metryk
```{r}
multi <- metric_set(mae, rmse, rsq, rsq_trad)

air |> augment(lm_fit, new_data = _) |> 
  group_by(month) |> 
  multi(truth = ozone, estimate = .pred) |>  
  pivot_wider(names_from = .metric, values_from = .estimate) |> 
  gt::gt() |> 
  gt::fmt_number(n_sigfig = 3)
```